var calendarIslamic, calendarGregorian, calendarFormat = "mm/dd/yyyy"; function inilitizeCalanders(a, e) { $(document).ready(function () { "en" == _SystemLanguge ? $.calendarsPicker.setDefaults($.calendarsPicker.regionalOptions[""]) : $.calendarsPicker.setDefaults($.calendarsPicker.regionalOptions.ar), calendarIslamic = $.calendars.instance("ummalqura", _SystemLanguge), calendarGregorian = $.calendars.instance("gregorian", _SystemLanguge), $(function () { $(".datepickerfieldHijri").each(function () { var a = "", e = new Date, t = e.getDate(), i = e.getMonth() + 1, r = e.getFullYear(); void 0 !== $(this).attr("dataDate") && (a = convertGregoianToHijri(i + "/" + t + "/" + (r - $(this).attr("dataDate").slice(1, -1)))); void 0 !== $(this).attr("today") && (a = convertGregoianToHijri($(this).attr("today"))); $(this).calendarsPicker({ calendar: calendarIslamic, dateFormat: calendarFormat, changeYear: !0, yearRange: "c-65:c+10", endDate: a, maxDate: a, onSelect: function (a) { if (void 0 !== a[0]) { var e = convertHijriToGregroian($(this).val()); $("#" + $(this).attr("id").replace("Hijri", "")).val(e), "function" == typeof ChangeDateCallBack && ChangeDateCallBack($(this).attr("id").replace("Hijri", ""), $("#" + $(this).attr("id").replace("Hijri", "")).val()) } else $("#" + $(this).attr("id").replace("Hijri", "")).val("") } }) }), $(".datepickerfieldGreg").each(function () { var a = $(this).attr("dataDate"); void 0 !== $(this).attr("today") && (a = $(this).attr("today")); $(this).calendarsPicker({ calendar: calendarGregorian, dateFormat: calendarFormat, changeYear: !0, yearRange: "c-65:c+10", endDate: a, maxDate: a, onSelect: function (a) { if (void 0 !== a[0]) { var e = convertGregoianToHijri($(this).val()); $("#" + $(this).attr("id") + "Hijri").val(e), "function" == typeof ChangeDateCallBack && ChangeDateCallBack($(this).attr("id"), $(this).val()) } else $("#" + $(this).attr("id") + "Hijri").val("") } }) }) }), $(".datepickerfieldGreg, .datepickerfieldHijri").mask("00/00/0000", { placeholder: calendarFormat, removeMaskOnSubmit: !0 }), $(".datepickerfieldHijri").on("focusout", function () { if (date = $(this).val(), "" != date && null != date) { var a = date.split("/"); if (0 !== $.calendars.instance("ummalqura")._validateLevel || $.calendars.instance("ummalqura").isValid(a[2], a[0], a[1])) { var e = convertHijriToGregroian($(this).val()); $("#" + $(this).attr("id").replace("Hijri", "")).val(e), "function" == typeof ChangeDateCallBack && ChangeDateCallBack($(this).attr("id").replace("Hijri", ""), $("#" + $(this).attr("id").replace("Hijri", "")).val()) } else $(this).val(""), $("#" + $(this).attr("id").replace("Hijri", "")).val("") } else $("#" + $(this).attr("id").replace("Hijri", "")).val("") }), $(".datepickerfieldGreg").on("focusout", function () { if (date = $(this).val(), "" != date && null != date) { var a = date.split("/"); if (0 === $.calendars.instance("gregorian")._validateLevel && !$.calendars.instance("gregorian").isValid(a[2], a[0], a[1]) || a[2] < 1900 || a[2] > 2070) $(this).val(""), $("#" + $(this).attr("id") + "Hijri").val(""); else { var e = convertGregoianToHijri($(this).val()); $("#" + $(this).attr("id") + "Hijri").val(e), "function" == typeof ChangeDateCallBack && ChangeDateCallBack($(this).attr("id"), $(this).val()) } } else $("#" + $(this).attr("id") + "Hijri").val("") }) }) } function convertHijriToGregroian(a) { a = calendarIslamic.parseDate(calendarFormat, a); return a = calendarGregorian.fromJD(a.toJD()), calendarGregorian.formatDate(calendarFormat, a) } function convertGregoianToHijri(a) { a = calendarGregorian.parseDate(calendarFormat, a); return a = calendarIslamic.fromJD(a.toJD()), calendarIslamic.formatDate(calendarFormat, a) } function maskAccountNumber(a) { $("#" + a).mask("0000-000000-000", { placeholder: "0000-000000-000", removeMaskOnSubmit: !0 }), $("#" + a).on("change", function () { $("#" + a).val($("#" + a).masked(pad($("#" + a).val().replace("-", ""), 13))) }) } function MaskTINNumber(a) { $("#" + a).mask("000-00-0000", { placeholder: "000-00-0000", removeMaskOnSubmit: !0 }), $("#" + a).on("change", function () { $("#" + a).val($("#" + a).masked(pad($("#" + a).val().replace("-", ""), 9))) }) } function MaskEINNumber(a) { $("#" + a).mask("0000000-00", { placeholder: "0000000-00", removeMaskOnSubmit: !0 }), $("#" + a).on("change", function () { $("#" + a).val($("#" + a).masked(pad($("#" + a).val().replace("-", ""), 9))) }) } function MaskPhoneNumber(a) { $("#" + a).mask("+000-0000000000", { placeholder: "+000-0000000000", removeMaskOnSubmit: !1 }), $("#" + a).on("change", function () { $("#" + a).val($("#" + a).masked(pad($("#" + a).val().replace(/\\+|-/g, ""), 13))) }) } function pad(a, e) { return (a = a.toString()).length < e ? pad(a + "0", e) : a } function validateAccountNumber(a) { return null != a && 0 != a.length && "0000-000000-000" != a } function ChangeDateCallBack(a, e) { "G1_FromDate" != a && "G1_ToDate" != a || RangeBetweenTwoDates("G1_FromDate", "G1_ToDate", _StartDateMustBeLessThanEndDate) } function RangeBetweenTwoDates(a, e, t) { if ("" != $("#" + a).val() && null != $("#" + a).val() && "" != $("#" + e).val() && null != $("#" + e).val()) { var i = $("#" + a).val().split("/"), r = i[2], s = i[0], n = i[1], d = $("#" + e).val().split("/"), l = d[2], o = d[0], c = d[1], p = new Date(r, s, n); new Date(l, o, c).getTime() - p.getTime() <= 0 && (bootbox.alert({ message: t, size: "small", title: _Warring, buttons: { ok: { label: _Ok } } }), $("#" + e).val(""), $("#" + e + "Hijri").val(""), $("#" + a).val(""), $("#" + a + "Hijri").val("")) } } function initlizeWizard(a) { $(document).ready(function () { $("#wizard").easyWizard({ culture: a, showSteps: !1, showButtons: !1, submitButton: !1, before: function (a, e, t) { var i = e.attr("data-step"), r = t.attr("data-step"); if (r > i && !$("form").valid()) return !1; $(".product-step").val(r), next(i, r) } }), $("input.button.back").on("click", function (a) { $(this).prop("disabled", "disabled"), a.preventDefault(), $("#wizard").easyWizard("prevStep"), setTimeout("$('input.button.back').prop('disabled', false);", 1e3) }) }) } function SaveAndContinue() { $(this).prop("disabled", "disabled"), $("#wizard").easyWizard("nextStep"), $(".easyWizardWrapper div[data-step='5']").hasClass("active") ? ($("button.continue").addClass("hide"), $("#btn_Submit").removeClass("hide"), $("#btn-Cancel").addClass("hide"), $("#btn_SaveAsDraft").addClass("hide")) : ($("button.continue").removeClass("hide"), $("#btn_Submit").addClass("hide"), $("#btn-Cancel").removeClass("hide"), $("#btn_SaveAsDraft").removeClass("hide")), $(".easyWizardWrapper div[data-step='1']").hasClass("active") ? $("#btnPrevious").addClass("hide") : $("#btnPrevious").removeClass("hide"), $("#step1 .bs-wizard-dot, #step2 .bs-wizard-dot, #step3 .bs-wizard-dot, #step4 .bs-wizard-dot").removeClass("active-step"), $("#step1 .text-center, #step2 .text-center, #step3 .text-center, #step4 .text-center").removeClass("stepInfo-style"), $("#step" + $(".easyWizardWrapper .step.active").attr("data-step") + " .bs-wizard-dot").addClass("active-step"), $("#step" + $(".easyWizardWrapper .step.active").attr("data-step") + " .text-center").addClass("stepInfo-style"), RefreshSessions(), setTimeout("$('button.continue').prop('disabled', false);", 1e3) } $(window).resize(function () { $("#wizard").length > 0 && $("#wizard").easyWizard("resize", $("#wizard").find(".active")) }); var waitForFinalEvent = function () { var a = {}; return function (e, t, i) { i || (i = "Don't call this twice without a uniqueId"), a[i] && clearTimeout(a[i]), a[i] = setTimeout(e, t) } }, _currentStep = 1; function next(a, e) { e > a && ($("#step" + a).hasClass("complete") || $("#step" + a).removeClass("active").addClass("complete"), _currentStep++ , $("#step" + e).hasClass("complete") || $("#step" + e).removeClass("disabled").addClass("active")) } function goTo(a) { $(".status-type").val(_ContinueStatus), $(".easyWizardWrapper div[data-step='" + a + "']").hasClass("active") || (_currentStep = a, $("#wizard").easyWizard("goToStep", a), $(".easyWizardWrapper div[data-step='5']").hasClass("active") ? ($("button.continue").addClass("hide"), $("#btn_Submit").removeClass("hide"), $("#btn-Cancel").addClass("hide"), $("#btn_SaveAsDraft").addClass("hide")) : ($("button.continue").removeClass("hide"), $("#btn_Submit").addClass("hide"), $("#btn-Cancel").removeClass("hide"), $("#btn_SaveAsDraft").removeClass("hide")), $(".easyWizardWrapper div[data-step='1']").hasClass("active") ? $("#btnPrevious").addClass("hide") : $("#btnPrevious").removeClass("hide"), $("#step1 .bs-wizard-dot, #step2 .bs-wizard-dot, #step3 .bs-wizard-dot, #step4 .bs-wizard-dot").removeClass("active-step"), $("#step1 .text-center, #step2 .text-center, #step3 .text-center, #step4 .text-center").removeClass("stepInfo-style"), $("#step" + $(".easyWizardWrapper .step.active").attr("data-step") + " .bs-wizard-dot").addClass("active-step"), $("#step" + $(".easyWizardWrapper .step.active").attr("data-step") + " .text-center").addClass("stepInfo-style")) } function PreviousStep() { $("#btnPrevious").prop("disabled", "disabled"), setTimeout("$('#btnPrevious').prop('disabled', false);", 1e3), goTo($(".easyWizardWrapper .step.active").attr("data-step") - 1) }
