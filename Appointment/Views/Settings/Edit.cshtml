@model Appointment.ViewModel.Models.SettingsViewModel

@{
    ViewBag.Title = "Settings Edit";


}
<style>
    #lable_text {
        text-align: left;
    }
</style>
<div class="container">
    <h1>Edit Settings</h1>

    @using (Html.BeginForm("Edit", "Settings", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()


        <div class="form-horizontal">

            <hr />

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


            <div class="row">
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.settingsView.EmailAdmin, htmlAttributes: new { @class = "control-label ", @id = "lable_text" })
                    <div class="">
                        @Html.EditorFor(model => model.settingsView.EmailAdmin, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.settingsView.EmailAdmin, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.settingsView.BirthdayReminder, htmlAttributes: new { @class = "control-label ", @id = "lable_text" })
                    <div class="">
                        @Html.DropDownListFor(m => m.BirthdayReminderID, new SelectList(Model.BirthdayReminder, "Value", "Text"), new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.settingsView.AnniversaryReminder, htmlAttributes: new { @class = "control-label ", @id = "lable_text" })
                    <div class="">
                        @Html.DropDownListFor(m => m.AnniversaryReminderID, new SelectList(Model.AnniversaryReminder, "Value", "Text"), new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.settingsView.EventReminder, htmlAttributes: new { @class = "control-label ", @id = "lable_text" })
                    <div class="">
                        @Html.DropDownListFor(m => m.EventReminderID, new SelectList(Model.EventReminder, "Value", "Text"), new { @class = "form-control" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.settingsView.SendBirthday, htmlAttributes: new { @class = "control-label ", @id = "lable_text" })
                    <div class="">
                        @Html.DropDownListFor(m => m.SendBirthdayID, new SelectList(Model.SendBirthday, "Value", "Text"), new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.settingsView.SendAnniversary, htmlAttributes: new { @class = "control-label ", @id = "lable_text" })
                    <div class="">
                        @Html.DropDownListFor(m => m.SendAnniversaryID, new SelectList(Model.SendAnniversary, "Value", "Text"), new { @class = "form-control" })
                    </div>
                </div>


                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.settingsView.SendEvent, htmlAttributes: new { @class = "control-label ", @id = "lable_text" })
                    <div class="">
                        @Html.DropDownListFor(m => m.SendEventID, new SelectList(Model.SendEvent, "Value", "Text"), new { @class = "form-control" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.settingsView.UpComingReminder, htmlAttributes: new { @class = "control-label ", @id = "lable_text" })
                    <div class="">
                        @Html.DropDownListFor(m => m.UpComingReminderID, new SelectList(Model.UpComingReminder, "Value", "Text"), new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group required col-md-4 col-md-4">
                    @Html.LabelFor(model => model.settingsView.BirthdayImagePath, htmlAttributes: new { @class = "control-label ", @id = "lable_text" })
                    <div class="">
                        @Html.HiddenFor(model => model.BirthdayImagePath)
                        <input type="file" name="birthdayImage" id="birthdayImage" class="form-control" />

                    </div>
                </div>

                @if (Model.BirthdayImagePath != null)
                {
                    <div class="form-group col-md-4 col-md-4">
                        @Html.LabelFor(model => model.settingsView.BirthdayImagePath, "Saved Birthday Image", htmlAttributes: new { @class = "control-label ", @id = "lable_text" })
                        <div class="">
                            <img id="myImg" src="@Url.Content(Model.BirthdayImagePath)" height="40px" width="40px" />

                        </div>
                    </div>
                }
            </div>

            <div class="row">
                <div class="form-group required col-md-4 col-md-4">
                    @Html.LabelFor(model => model.settingsView.AnniversaryImagePath, htmlAttributes: new { @class = "control-label ", @id = "lable_text" })
                    <div class="">
                        @Html.HiddenFor(model => model.AnniversaryImagePath)
                        <input type="file" name="AnniversaryImage" id="AnniversaryImage" class="form-control" />

                    </div>
                </div>

                @if (Model.AnniversaryImagePath != null)
                {
                    <div class="form-group col-md-4 col-md-4">
                        @Html.LabelFor(model => model.settingsView.AnniversaryImagePath, "Saved Anniversary Image", htmlAttributes: new { @class = "control-label ", @id = "lable_text" })
                        <div class="">
                            <img id="myImg" src="@Url.Content(Model.AnniversaryImagePath)" height="40px" width="40px" />

                        </div>
                    </div>
                }
            </div>
        </div>

        <div class="row">
            <div class="form-group col-md-12">
                @Html.LabelFor(model => model.settingsView.BirthDayEmailText, htmlAttributes: new { @class = "control-label ", @id = "lable_text" })
                <div class="">
                    @Html.TextAreaFor(model => model.settingsView.BirthDayEmailText, 3, 10, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.settingsView.BirthDayEmailText, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-12">
                @Html.LabelFor(model => model.settingsView.AnniversaryEmailText, htmlAttributes: new { @class = "control-label ", @id = "lable_text" })
                <div class="">
                    @Html.TextAreaFor(model => model.settingsView.AnniversaryEmailText, 3, 10, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.settingsView.AnniversaryEmailText, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="text-center m-5">
            <div class="col-md-offset-2 ">
                <input type="submit" value="Save" class="btn btn-primary" />
                <input type="button" value="Cancel" class="btn btn-primary" onclick="location.href='@Url.Action("Index", "Settings" )'" />

            </div>

        </div>
    }
</div>
<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<script>
    $(document).ready(function () {
        $("form").submit(function () {
            debugger;
            $('button[type=button], input[type=button]').prop('disabled', true);
            $('button[type=submit], input[type=submit]').prop('disabled', true);
            $("form").each(function () { $.data($(this)[0], 'validator', false); });
            var fom = $("form");
            $.validator.unobtrusive.parse(fom);
            if ($("form").valid()) {
                //fillFieldsForSubmit();
            }
            else {
                $("form").valid();
                $("form").each(function () { $.data($(this)[0], 'validator', false); });
                $.validator.unobtrusive.parse("form");
                $('button[type=button], input[type=button]').removeAttr('disabled');
                $('button[type=submit], input[type=submit]').removeAttr('disabled');
            }
        });

        $('#birthdayImage').change(function () {
            $('#settingsView_BirthdayImagePath').val(this.value)
        })
    });

    $(function () {
        debugger;
        $(":file").change(function () {
            if (this.files && this.files[0]) {
                var reader = new FileReader();

                reader.onload = imageIsLoaded;
                reader.readAsDataURL(this.files[0]);
            }
        });
    });

    function imageIsLoaded(e) {
        $('#myImg').attr('src', e.target.result);
    };
</script>